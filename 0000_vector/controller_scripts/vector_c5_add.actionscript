[Action Press] 1:1 1:0 6:1 6:0 11:1 11:0 42:1 34:1 34:0 42:0 23:1 23:0
[Action  Type] void ARC_Vector_Add(ARC_Vector *vector, void *data){
[Action Press] 29:1 28:1 28:0 29:0
[Action  Type] //check to see if the current size is the same as a max uint32_t and if so it will overflow so throw an error
[Action Press] 29:1 28:1 28:0 29:0
[Action Press] 14:1 14:0 14:1 14:0
[Action  Type] if(vector->currentSize == ~((uint32_t)0)){
[Action Press] 29:1 28:1 28:0 29:0
[Action  Type] arc_errno = ARC_ERRNO_OVERFLOW;
[Action Press] 29:1 28:1 28:0 29:0
[Action  Type] ARC_DEBUG_LOG_ERROR("ARC_Vector_Add(vector, data), vector at max capacity tried adding another value");
[Action Press] 29:1 28:1 28:0 29:0
[Action  Type] return;
[Action Press] 29:1 28:1 28:0 29:0
[Action  Type] }
[Action Press] 29:1 28:1 28:0 29:0
[Action Press] 29:1 28:1 28:0 29:0
[Action  Type] //check if we are at the max of the current capacity
[Action Press] 29:1 28:1 28:0 29:0
[Action Press] 14:1 14:0 14:1 14:0
[Action  Type] if(vector->currentSize == vector->currentCapacity){
[Action Press] 29:1 28:1 28:0 29:0
[Action  Type] //increase the current capacity by double
[Action Press] 29:1 28:1 28:0 29:0
[Action Press] 14:1 14:0 14:1 14:0
[Action  Type] vector->currentCapacity <<= 1;
[Action Press] 29:1 28:1 28:0 29:0
[Action Press] 29:1 28:1 28:0 29:0
[Action  Type] //if for some reason the capacity is 0, we should set it to one so we do not error on realloc
[Action Press] 29:1 28:1 28:0 29:0
[Action Press] 14:1 14:0 14:1 14:0
[Action  Type] if(vector->currentCapacity != 0){
[Action Press] 29:1 28:1 28:0 29:0
[Action  Type] vector->currentCapacity++;
[Action Press] 29:1 28:1 28:0 29:0
[Action  Type] }
[Action Press] 29:1 28:1 28:0 29:0
[Action Press] 29:1 28:1 28:0 29:0
[Action  Type] //resize the vectors array and copy the contents at the same time
[Action Press] 29:1 28:1 28:0 29:0
[Action Press] 14:1 14:0 14:1 14:0
[Action  Type] vector->data = (void **)realloc(vector->data, sizeof(void *) * vector->currentCapacity);
[Action Press] 29:1 28:1 28:0 29:0
[Action  Type] }
[Action Press] 29:1 28:1 28:0 29:0
[Action Press] 29:1 28:1 28:0 29:0
[Action  Type] //add to the vectors array and increase its current size
[Action Press] 29:1 28:1 28:0 29:0
[Action Press] 14:1 14:0 14:1 14:0
[Action  Type] vector->data[vector->currentSize] = data;
[Action Press] 29:1 28:1 28:0 29:0
[Action  Type] vector->currentSize++;
[Action Press] 29:1 28:1 28:0 29:0
[Action  Type] }
[Action Press] 29:1 28:1 28:0 29:0
[Action Press] 29:1 28:1 28:0 29:0
