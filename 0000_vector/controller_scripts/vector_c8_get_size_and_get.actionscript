[Action Press] 1:1 1:0 2:1 2:0 2:1 2:0 8:1 8:0 42:1 34:1 34:0 42:0 23:1 23:0
[Action  Type] uint32_t ARC_Vector_GetSize(ARC_Vector *vector){
[Action Press] 29:1 28:1 28:0 29:0
[Action  Type] return vector->currentSize;
[Action Press] 29:1 28:1 28:0 29:0
[Action  Type] }
[Action Press] 29:1 28:1 28:0 29:0
[Action Press] 29:1 28:1 28:0 29:0
[Action  Type] void *ARC_Vector_Get(ARC_Vector *vector, uint32_t index){
[Action Press] 29:1 28:1 28:0 29:0
[Action  Type] //check to make sure the given index is in bounds of the vector
[Action Press] 29:1 28:1 28:0 29:0 14:1 14:0 14:1 14:0
[Action  Type] if(index >= vector->currentSize){
[Action Press] 29:1 28:1 28:0 29:0
[Action  Type] arc_errno = ARC_ERRNO_DATA;
[Action Press] 29:1 28:1 28:0 29:0
[Action  Type] ARC_DEBUG_LOG_ERROR_WITH_VARIABLES("ARC_Vector_Get(vector, %u), null value as the index was out of bounds", index);
[Action Press] 29:1 28:1 28:0 29:0
[Action  Type] return NULL;
[Action Press] 29:1 28:1 28:0 29:0
[Action  Type] }
[Action Press] 29:1 28:1 28:0 29:0
[Action Press] 29:1 28:1 28:0 29:0
[Action  Type] return vector->data[index];
[Action Press] 29:1 28:1 28:0 29:0
[Action  Type] }
[Action Press] 29:1 28:1 28:0 29:0
[Action Press] 1:1 1:0
